shiny::runApp()
shiny::runApp()
encoding(andmed)
Encoding(andmed)
andmed=readRDS("./andmed/2016-03-31_andmedPikk.rds")
Encoding(andmed)
Encoding(andmed$ministeerium)
?Quotes
shiny::runApp()
shiny::runApp()
translation=read.csv("./translations/dictionary_ui.csv", sep=";", encoding = 'UTF-8')#tõlked interface raami jaoks
Encoding(translation$et)
translation=read.csv("./translations/dictionary_ui.csv", sep=";", encoding = 'UTF-8', stringsAsFactors = F)#tõlked interface raami jaoks
Encoding(translation$et)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
translation$et=x <- enc2native(translation$et)
Encoding(translation$et)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
iconv(translation$et, "UTF-8")
shiny::runApp()
print(Sys.getlocale(category = "LC_CTYPE"))
shiny::runApp()
kanali_tolked=read.csv("./translations/dictionary_channels.csv", sep=";", stringsAsFactors = F)
naitaja_tolked=read.csv("./translations/dictionary_moodik.csv", sep=";", stringsAsFactors = F)
ministeerium_tolked=read.csv("./translations/dictionary_ministeeriumid.csv", sep=";", stringsAsFactors = F)
asutused_tolked=read.csv("./translations/dictionary_asutused.csv", sep=";", stringsAsFactors = F)
translation=read.csv("./translations/dictionary_ui.csv", sep=";")#tõlked interface raami jaoks
saveRDS(kanali_tolked, "./translations/dictionary_channels.RDS", fileEncoding="utf-8" )
write.table(translation,"./translations/dictionary_ui.csv", sep=";", stringsAsFactors = F, fileEncoding ="utf-8")
write.table(translation,"./translations/dictionary_ui.csv", sep=";", fileEncoding ="utf-8")
translation=read.csv("./translations/dictionary_ui.csv", sep=";")#tõlked interface raami jaoks
Encoding(translation$et)
Encoding(as.character(translation$et))
translation=read.csv("./translations/dictionary_ui.csv", sep=";")#tõlked interface raami jaoks
write.table(translation,"./translations/dictionary_ui.csv", sep=";",row.names = F, fileEncoding ="utf-8")
shiny::runApp()
kanali_tolked=read.csv("./translations/dictionary_channels.csv", sep=";", stringsAsFactors = F)
naitaja_tolked=read.csv("./translations/dictionary_moodik.csv", sep=";", stringsAsFactors = F)
ministeerium_tolked=read.csv("./translations/dictionary_ministeeriumid.csv", sep=";", stringsAsFactors = F)
asutused_tolked=read.csv("./translations/dictionary_asutused.csv", sep=";", stringsAsFactors = F)
translation=read.csv("./translations/dictionary_ui.csv", sep=";")#tõlked interface raami jaoks
write.table(translation,"./translations/dictionary_ui.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(asutused_tolked,"./translations/dictionary_asutused.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(ministeerium_tolked,"./translations/dictionary_ministeeriumid.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(naitaja_tolked,"./translations/dictionary_moodik.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(kanali_tolked,"./translations/dictionary_channels.csv", sep=";",row.names = F, fileEncoding ="utf-8")
shiny::runApp()
translation=read.csv("./translations/dictionary_ui.csv", sep=";")#tõlked interface raami jaoks
write.table(translation,"./translations/dictionary_ui.csv", sep=";",row.names = F, fileEncoding ="utf-8")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(riigiteenused)
andmedLai=riigiteenused::andmedSisse("https://www.riigiteenused.ee/api/et/all")
andmed=andmedPikaks(andmedLai)
osutamistearv=andmed[andmed$naitaja=="osutamiste arv",]$value
ajakulu=andmed[andmed$naitaja=="ajakulu",]$value
sum(osutamistearv*ajakulu)
str(andmed)
sum(osutamistearv*ajakulu, na.rm=T)
sum(osutamistearv*ajakulu, rm.na=T)
andmed$ministeerium=gsub("i haldusala", "", andmed$ministeerium)
andmed$ministeerium=gsub("Riigikantsele", "Riigikantselei", andmed$ministeerium)
andmed$kanal=gsub("Kliendijuures", "Kliendi juures", andmed$kanal)
andmed$kanal=gsub("Eiseteenindus", "E-iseteenindus", andmed$kanal)
andmed$kanal=gsub("Eesti", "Eesti.ee", andmed$kanal)
andmed$kanal=gsub("Epost", "E-post", andmed$kanal)
andmed$naitaja=gsub("osutamistearv", "osutamiste arv", andmed$naitaja)
osutamistearv=andmed[andmed$naitaja=="osutamiste arv",]$value
ajakulu=andmed[andmed$naitaja=="ajakulu",]$value
sum(osutamistearv*ajakulu, rm.na=T)
sum(osutamistearv*ajakulu, na.rm =T)
unique(andmed$ministeerium)
minist="Justiitsministeerium"
andmed=andmed[andmed$ministeerium==minist,]
sum(andmed[andmed$naitaja=="halduskulu",]$value, na.rm = T)
sum(ajakulu*osutamistearv ,na.rm=T)
minist
unique(andmed$ministeerium)
osutamistearv=andmed[andmed$naitaja=="osutamiste arv",]$value
ajakulu=andmed[andmed$naitaja=="ajakulu",]$value
sum(ajakulu*osutamistearv ,na.rm=T)
shiny::runApp()
library(riigiteenused)
library(riigiteenused)
library(devtools)
install_github("RRisto/riigiteenused")
library(riigiteenused)
install_github("RRisto/riigiteenused")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install_github("RRisto/riigiteenused")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
names(andmed)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
KasutuskordadeSum=function(andmed, minist, allasutus, minJah, text, keel) {
if (keel=="et") {
if (minJah==1) { #kui muu, siis on allasutus
andmed=andmed[andmed$ministeerium==minist,]
} else if (minJah==2) {
andmed=andmed
}else {
andmed=andmed[andmed$allasutus==allasutus,]
}
valueBox(
paste(format(sum(andmed[andmed$naitaja=="osutamiste arv",]$value, na.rm = T), big.mark=" ")),
text,icon = icon("hand-o-left"),color = "purple")
} else {
if (minJah==1) { #kui muu, siis on allasutus
andmed=andmed[andmed$ministeerium_en==minist,]
} else if (minJah==2) {
andmed=andmed
}else {
andmed=andmed[andmed$allasutus_en==allasutus,]
}
valueBox(
paste(format(sum(andmed[andmed$naitaja=="osutamiste arv",]$value, na.rm = T), big.mark=" ")),
text,icon = icon("hand-o-left"),color = "purple")
}
}
anmed[1, "allasutus"]
andmed[1, "allasutus"]
KasutuskordadeSum(andmed, allasutus = "SA Eesti Vabaõhumuuseum", minJah=0, text="pla", keel="en")
KasutuskordadeSum(andmed, allasutus = "Maanteeamet", minJah=0, text="pla", keel="en")
KasutuskordadeSum(andmed, allasutus = "Maanteeamet", minJah=0, text="pla", keel="et")
proov=andmed[andmed$allasutus==allasutus,]
names(andmed)
allasutus="Maanteeamet"
proov=andmed[andmed$allasutus==allasutus,]
View(proov)
sum(proov[proov$naitaja=="osutamiste arv",]$value, na.rm = T)
andmedLai=riigiteenused::andmedSisse("https://www.riigiteenused.ee/api/et/all")
andmed=andmedPikaksDT(andmedLai)
andmed[, ministeerium:=gsub("i haldusala", "", andmed[,ministeerium])]
andmed[, ministeerium:=gsub("Riigikantsele", "Riigikantselei", andmed[,ministeerium])]
andmed[, kanal:=gsub("Kliendijuures", "Kliendi juures", andmed[,kanal])]
andmed[, kanal:=gsub("Eiseteenindus", "E-iseteenindus", andmed[,kanal])]
andmed[, kanal:=gsub("Eesti", "Eesti.ee", andmed[,kanal])]
andmed[, kanal:=gsub("Epost", "E-post", andmed[,kanal])]
andmed[, kanal:=gsub("Letiteenus", "Teeninduslett", andmed[,kanal])]
andmed[, naitaja:=gsub("osutamistearv", "osutamiste arv", andmed[,naitaja])]
#loen sisse tõlkefailid (fread aitab encodingu probleeme ennetada)
kanali_tolked=fread("./translations/dictionary_channels.csv", encoding = "UTF-8")
naitaja_tolked=fread("./translations/dictionary_moodik.csv", encoding = "UTF-8")
ministeerium_tolked=fread("./translations/dictionary_ministeeriumid.csv", encoding = "UTF-8")
asutused_tolked=fread("./translations/dictionary_asutused.csv", encoding = "UTF-8")
translation=read.csv("./translations/dictionary_ui.csv", sep=";",stringsAsFactors = F)#tõlked interface raami jaoks
#keevitan kanalite, moodikute tõlked juurde, kui siin "andmed" ridade
#arv väheneb, on kuskil keys bugi sees
andmed=merge(andmed, kanali_tolked, by.x="kanal", by.y="key")
andmed=merge(andmed, naitaja_tolked, by.x="naitaja", by.y="key")
andmed=merge(andmed, ministeerium_tolked, by.x="ministeerium", by.y="key")
andmed=merge(andmed, asutused_tolked, by.x="allasutus", by.y="key")
KasutuskordadeSum=function(andmed, minist, allasutus, minJah, text, keel) {
if (keel=="et") {
if (minJah==1) { #kui muu, siis on allasutus
andmed=andmed[andmed$ministeerium==minist,]
} else if (minJah==2) {
andmed=andmed
}else {
andmed=andmed[andmed$allasutus==allasutus,]
}
valueBox(
paste(format(sum(andmed[andmed$naitaja=="osutamiste arv",]$value, na.rm = T), big.mark=" ")),
text,icon = icon("hand-o-left"),color = "purple")
} else if (keel=="en") {
if (minJah==1) { #kui muu, siis on allasutus
andmed=andmed[andmed$ministeerium_en==minist,]
} else if (minJah==2) {
andmed=andmed
}else {
andmed=andmed[andmed$allasutus_en==allasutus,]
}
valueBox(
paste(format(sum(andmed[andmed$naitaja=="osutamiste arv",]$value, na.rm = T), big.mark=" ")),
text,icon = icon("hand-o-left"),color = "purple")
}
}
KasutuskordadeSum(andmed=andmed, allasutus="Maanteeamet", minJah=0, text="proov", keel="et")
KasutuskordadeSum(andmed=andmed, allasutus="Tarbijakaitseamet", minJah=0, text="proov", keel="et")
andmedAlg=andmed
andmed=andmed[andmed$allasutus==allasutus,]
allasutus
andmed$allasutus[1:5]
class(allasutus)
class(andmed$allasutus[1:5])
View(andmed)
andmed$allasutus==allasutus
andmed[andmed$allasutus==allasutus,]
andmed=andmed[andmed$allasutus==allasutus]
andmed=andmed[andmed$allasutus==allasutus]
andmed=andmed[allasutus==allasutus]
class(andmed)
andmed$allasutus
andmed[allasutus=="Maanteeamet"]
andmed[allasutus==allasutus]
allasutusnimi="Maanteeamet"
andmed[allasutus==allasutusnimi]
#kasutuskordade summa arvutamiseks, teeb vale boxi interface
KasutuskordadeSum=function(andmed, minist, allasutusnimi, minJah, text, keel) {
if (keel=="et") {
if (minJah==1) { #kui muu, siis on allasutus
andmed=andmed[andmed$ministeerium==minist,]
} else if (minJah==2) {
andmed=andmed
}else if (minJah==0) {
#andmed=andmed[andmed$allasutus==allasutus,]
andmed=andmed[allasutus==allasutusnimi]
}
valueBox(
paste(format(sum(andmed[andmed$naitaja=="osutamiste arv",]$value, na.rm = T), big.mark=" ")),
text,icon = icon("hand-o-left"),color = "purple")
} else if (keel=="en") {
if (minJah==1) { #kui muu, siis on allasutus
andmed=andmed[andmed$ministeerium_en==minist,]
} else if (minJah==2) {
andmed=andmed
}else {
#andmed=andmed[andmed$allasutus_en==allasutus,]
andmed=andmed[allasutus_en==allasutusnimi]
}
valueBox(
paste(format(sum(andmed[andmed$naitaja=="osutamiste arv",]$value, na.rm = T), big.mark=" ")),
text,icon = icon("hand-o-left"),color = "purple")
}
}
KasutuskordadeSum(andmed, allasutusnimi = "Maanteeamet", minJah=0, text="ppp", keel="et")
KasutuskordadeSum(andmed, allasutusnimi = "Tarbijakaitseamet", minJah=0, text="ppp", keel="et")
KasutuskordadeSum(andmed, allasutusnimi = "Patendiamet", minJah=0, text="ppp", keel="et")
KasutuskordadeSum(andmed, allasutusnimi = "Kultuuriministeerium", minJah=0, text="ppp", keel="et")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
exp(5)
exp(1)
exp(0.1)
exp(100)
exp(2)
exp(3.14)
exp(0.5)
exp(0.6)
exp(0.7)
exp(0.69)
exp(0.698)
exp(0.697)
exp(0.696)
exp(0.695)
exp(0.693)
exp(0.694)
5^2
5^0.693
10^0.693
2^0.693
1^0.693
exp(1)
e
1+0.5+1/6
1+0.5+1/6+1/(6*4)
exp(1)
1+1+1/2+1/6
1+1+1/2+1/6+1/24
shiny::runApp()
shiny::runApp()
shiny::runApp()
kanali_tolked=read.csv("./translations/algfailid/dictionary_channels.csv", sep=";", stringsAsFactors = F)
naitaja_tolked=read.csv("./translations/algfailid/dictionary_moodik.csv", sep=";", stringsAsFactors = F)
ministeerium_tolked=read.csv("./translations/algfailid/dictionary_ministeeriumid.csv", sep=";", stringsAsFactors = F)
asutused_tolked=read.csv("./translations/algfailid/dictionary_asutused.csv", sep=";", stringsAsFactors = F)
translation=read.csv("./translations/algfailid/dictionary_ui.csv", sep=";")#tõlked interface raami jaoks
#csv
write.table(translation,"./translations/dictionary_ui.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(asutused_tolked,"./translations/dictionary_asutused.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(ministeerium_tolked,"./translations/dictionary_ministeeriumid.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(naitaja_tolked,"./translations/dictionary_moodik.csv", sep=";",row.names = F, fileEncoding ="utf-8")
write.table(kanali_tolked,"./translations/dictionary_channels.csv", sep=";",row.names = F, fileEncoding ="utf-8")
#rds
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
library(devtools)
shiny::runApp()
