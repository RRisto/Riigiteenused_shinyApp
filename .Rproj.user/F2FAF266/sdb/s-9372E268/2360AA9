{
    "contents" : "#########Igasugu abifunktsioone\n\n#abifunktsioon andmete summeerimiseks\nsummeerija=function(data, ...) { #... paned jutumärkidesse variabled mille järgi grupeerida\n  library(dplyr)\n  tulem=data %>%\n    group_by_(...) %>%\n    summarize(stat_olemas_tk=sum(!is.na(value)),\n              max_stat=length(value), #ehk kui palju oleks kanali näitaja hulk\n              stat_olemas_pr=sum(!is.na(value))/length(value)) \n  tulem\n}\n\n#ja eelenav funktsiooni andmete visualiseerimiseks (skaala %)\nvisualiseerija=function(data, mapping, ylab) {\n  #localenv <- environment()\n  library(ggplot2)\n  library(scales)\n  ggplot(data, mapping)+\n    geom_bar(stat = \"identity\", fill=\"lightblue\")+\n    theme_minimal()+\n    theme(axis.text.x = element_text(angle = 45, hjust=1, size=13))+\n    xlab(\"\")+\n    ylab(ylab)+\n    coord_cartesian(ylim=c(0,1))+\n    scale_y_discrete(labels = percent)+\n    ggtitle(\"Järgmiste mõõdikuga teenuste osakaal:\")\n}\n\n# visualiseerija=function(data, mapping, ylab) {\n#   #localenv <- environment()\n#   #library(ggplot2)\n#   library(scales)\n#   #library(plotly)\n#   ggplot(data, mapping)+\n#     geom_bar(stat = \"identity\", fill=\"lightblue\")+\n#     theme_minimal()+\n#     theme(axis.text.x = element_text(angle = 45, hjust=1, size=13))+\n#     xlab(\"\")+\n#     ylab(ylab)+\n#     coord_cartesian(ylim=c(0,1))+\n#     scale_y_discrete(labels = percent)+\n#     ggtitle(\"Järgmiste mõõdikuga teenuste osakaal:\")\n#   \n# }\n\n#summeerija, ei tooda protsente\nsummeerija2=function(data, ...) { #... paned jutumärkidesse variabled mille järgi grupeerida\n  library(dplyr)\n  tulem=data %>%\n    group_by_(...) %>%\n    summarize(arv=n()) \n  tulem\n}\n#ja eelneva andmete alusel graafiku tegemiseks\nvisualiseerija2=function(data, mapping, ylab) {\n  library(ggplot2)\n  ggplot(data, mapping)+\n    geom_bar(stat = \"identity\", fill=\"lightblue\")+\n    theme_minimal()+\n    theme(axis.text.x = element_text(angle = 45, hjust=1, size=13))+\n    xlab(\"\")+\n    ylab(ylab)+\n    ggtitle(enc2native(\"Teenuste arv kanalite lõikes\"))\n}\n#teenuste arv minni/asutuse haldusalas, teeb valueboxi interface\nTeenusteSum=function(andmed, minist, allasutus, minJah) {\n  if (minJah==1) { #kui muu, siis on allasutus\n    andmed=andmed[andmed$ministeerium==minist,]\n  } else if (minJah==2) {\n    andmed=andmed\n  } else    {\n    andmed=andmed[andmed$allasutus==allasutus,]\n  }\n  valueBox(\n    paste(length(unique(andmed$identifikaator))), \n    \"kaardistatud teenust\",icon = icon(\"list-ol\"),color = \"purple\")\n}\n\n#kasutuskordade summa arvutamiseks, teeb vale boxi interface\nKasutuskordadeSum=function(andmed, minist, allasutus, minJah) {\n  if (minJah==1) { #kui muu, siis on allasutus\n    andmed=andmed[andmed$ministeerium==minist,]\n  } else if (minJah==2) {\n    andmed=andmed\n  }else {\n    andmed=andmed[andmed$allasutus==allasutus,]\n  }\n  valueBox(\n    paste(format(sum(andmed[andmed$naitaja==\"osutamistearv\",]$value, na.rm = T), big.mark=\" \")), \n    \"korda kasutati teenuseid\",icon = icon(\"hand-o-left\"),color = \"purple\")\n}\n\n#keskmise rahulolu arvutamiseks, teeb value boxi kohe interfaces\nKeskmineRahulolu=function(andmed, minist, allasutus, minJah) {\n  if (minJah==1) { #kui muu, siis on allasutus\n    andmed=andmed[andmed$ministeerium==minist,]\n  } else if (minJah==2) {\n    andmed=andmed\n  }else {\n    andmed=andmed[andmed$allasutus==allasutus,]\n  }\n  valueBox(\n    paste(round(\n      mean(\n        andmed[andmed$naitaja==\"rahulolu\",]$value, na.rm = T), 1)), \n    \"% keskmine rahulolu\",icon = icon(\"smile-o\"),color = \"purple\")\n}\n\n##asutuste/minni teenuse kogukulu arvutamiseks, teeb valueboxi interface\nHalduskuluSum=function(andmed, minist, allasutus, minJah) {\n  if (minJah==1) { #kui muu, siis on allasutus\n    andmed=andmed[andmed$ministeerium==minist,]\n  } else if (minJah==2) {\n    andmed=andmed\n  }else {\n    andmed=andmed[andmed$allasutus==allasutus,]\n  }\n  valueBox(\n    paste(\n      format(\n        sum(andmed[andmed$naitaja==\"halduskulu\",]$value, na.rm = T), big.mark=\" \")), \n    \"teenuste kulu riigile\",icon = icon(\"euro\"),color = \"purple\")\n}\n\n#asutuste/minni klientide ajakulu kokku arvutamiseks, teeb kohe\n#valueboxi interface\nKliendiAjakuluSum=function(andmed, minist, allasutus, minJah) {\n  if (minJah==1) { #kui muu, siis on allasutus\n    andmed=andmed[andmed$ministeerium==minist,]\n  } else if (minJah==2) {\n    andmed=andmed\n  }else {\n    andmed=andmed[andmed$allasutus==allasutus,]\n  }\n  osutamistearv=andmed[andmed$naitaja==\"osutamistearv\",]$value\n  ajakulu=andmed[andmed$naitaja==\"ajakulu\",]$value\n  valueBox(\n    paste(paste(format(round(sum(ajakulu*osutamistearv ,na.rm=T)), big.mark=\" \"))), \n    \"tundi kulutasid kliendid teenuste kasutamisele\",icon = icon(\"clock-o\"),color = \"purple\")\n}\n\n",
    "created" : 1448807180257.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3895752238",
    "id" : "2360AA9",
    "lastKnownWriteTime" : 1450429166,
    "path" : "~/R/Riigiteenused_shiny/helpers.R",
    "project_path" : "helpers.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}