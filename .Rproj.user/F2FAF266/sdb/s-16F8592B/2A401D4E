{
    "contents" : "library(shinydashboard)\nsource(\"helpers.R\")\nandmed=readRDS(\"./andmed/2015-11-25_andmedPikk.rds\")\nandmed$ministeerium=gsub(\"i haldusala\", \"\", andmed$ministeerium)\n\n\nserver <- function(input, output) {\n  ##########ministeeriumi asjad\n  #ministeeriumi teenuste arv\n  output$MinTeenusteArv <- renderValueBox({\n    TeenusteSum(andmed=andmed, minist=input$ministeerium, minJah=1)\n  })\n  \n  #asutuste arv ministeeriumi haldusalas\n  output$MinAsutusteArv <- renderValueBox({\n    valueBox(\n      paste(length(unique(andmed[andmed$ministeerium==input$ministeerium,]$allasutus))), \n      \"allasutust\",icon = icon(\"home\"),color = \"purple\"\n    )\n  })\n  \n  #plot ministeeriumi teenuseid kanali kohta\n  output$TeenuseidKanalisMin <- renderPlot({\n    data <- summeerija2(andmed[andmed$ministeerium==input$ministeerium&andmed$naitaja==\"rahulolu\",], c(\"kanal\", \"identifikaator\", \"naitaja\"))\n    visualiseerija2(data, aes(x=kanal, y=arv),\"\")+ ggtitle(\"Teenuste arv kanalite lõikes\")\n  })\n  \n  # plotministeeriumi moodikuid kanali kohta\n  output$MoodikuidMin <- renderPlot({\n    data <- summeerija(andmed[andmed$ministeerium==input$ministeerium,], c(\"naitaja\"))\n    visualiseerija(data, aes(x=naitaja, y=stat_olemas_pr), \"\")+ \n      ggtitle(\"Järgmiste mõõdikuga teenuste osakaal:\")\n  })\n  \n  #ministeeriumi kasutuskordade arv kokku\n  output$MinKasutuskordi <- renderValueBox({\n    KasutuskordadeSum(andmed=andmed, minist=input$ministeerium, minJah=1)\n  })\n  #minsteeriumi keskmine rahulolu\n   output$MinRahulolu <- renderValueBox({\n  KeskmineRahulolu(andmed=andmed, minist=input$ministeerium, minJah=1)\n  })\n#ministeeriumi teenuste maksumus\n    output$MinMaksumus <- renderValueBox({\n      HalduskuluSum(andmed=andmed, minist=input$ministeerium, minJah=1)\n  })\n    #ministeeriumi teenuste ajakulu\n    output$MinAjakulu <- renderValueBox({\n      KliendiAjakuluSum(andmed=andmed, minist=input$ministeerium, minJah=1)\n    })\n    \n    ############################allasutuste asjad\n    ##interaktiivselt kuvab asutused, mis valitud minni al on\n    output$allasutus <- renderUI({\n      selectInput(\"asutus\", \"\", as.character(unique(andmed[andmed$ministeerium==input$ministeerium2,]$allasutus)))\n    })\n    \n    #allasutuse teenuste arv\n    output$AsutTeenusteArv <- renderValueBox({\n      TeenusteSum(andmed=andmed, allasutus =input$asutus, minJah=0)\n    })\n    #plot teenuseid kanalis \n    output$TeenuseidKanalisAsut <- renderPlot({\n      data <- summeerija2(andmed[andmed$allasutus==input$asutus&andmed$naitaja==\"rahulolu\",], c(\"kanal\", \"identifikaator\", \"naitaja\"))\n      visualiseerija2(data, aes(x=kanal, y=arv),\"\")+ ggtitle(\"Teenuste arv kanalite lõikes\")\n    })\n    \n    # plot asutuse moodikuid kanali kohta\n    output$MoodikuidAsut <- renderPlot({\n      data <- summeerija(andmed[andmed$allasutus==input$asutus,], c(\"naitaja\"))\n      visualiseerija(data, aes(x=naitaja, y=stat_olemas_pr), \"\")+ \n        ggtitle(\"Järgmiste mõõdikuga teenuste osakaal:\")\n    })\n    #asutuse kasutuskordade arv kokku\n    output$AsutKasutuskordi <- renderValueBox({\n      KasutuskordadeSum(andmed=andmed, allasutus=input$asutus, minJah=0)\n    })\n    #asutuse keskmine rahulolu\n    output$AsutRahulolu <- renderValueBox({\n      KeskmineRahulolu(andmed=andmed, allasutus=input$asutus, minJah=0)\n    })\n    #asutuse teenuste maksumus\n    output$AsutMaksumus <- renderValueBox({\n      HalduskuluSum(andmed=andmed, allasutus=input$asutus, minJah=0)\n    })\n    #ministeeriumi teenuste ajakulu\n    output$AsutAjakulu <- renderValueBox({\n      KliendiAjakuluSum(andmed=andmed, allasutus=input$asutus, minJah=0)\n    })\n}\n\n\n",
    "created" : 1448302550735.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2510218940",
    "id" : "2A401D4E",
    "lastKnownWriteTime" : 1448460847,
    "path" : "~/R/Riigiteenused_shiny/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}